@startuml QuizResultClassDiagram

skinparam {
    classFontSize 13
    arrowFontSize 12
    classAttributeFontSize 12
}

package "Command Layer" {
    abstract class Command {
        +{abstract} executeCommand()
    }

    class CommandViewQuizResult {
        +executeCommand()
    }
}

package "Deck Layer" {
    class Deck {
        -incorrectIndexes: ArrayList<Integer>
        -incorrectFlashcards: ArrayList<Flashcard>
        -incorrectAnswers: ArrayList<String>
        +showQuizResult(): String
        +showMistakes(): void
        -validateArrays(): boolean
        -calculateStats(): String
    }
}

package "Data Model" {
    class Flashcard {
        -question: String
        -answer: String
        -codeSnippet: String
        +getQuestion(): String
        +getAnswer(): String
    }
}

package "UI Layer" {
    class Ui {
        +showToUser(message: String): void
        +showError(error: String): void
    }
}

' Relationships
Command <|-- CommandViewQuizResult
CommandViewQuizResult --> Deck : "1..1" calls
CommandViewQuizResult --> Ui : "1..1" displays through

Deck "1" *-- "0..*" Flashcard : contains
Deck "1" *-- "0..*" Integer : incorrectIndexes
Deck "1" *-- "0..*" String : incorrectAnswers

' Method call annotations
note top of Deck
  showQuizResult() workflow:
  1. validateArrays()
  2. calculateStats()
  3. showMistakes()
end note

note right of Flashcard
  Data structure for:
  - Original questions
  - Correct answers
end note

@enduml